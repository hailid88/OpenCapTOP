<%@ WebHandler Language="C#" Class="getAVLChart" %>

using System;
using System.Web;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Xml;

public class getAVLChart : IHttpHandler {
    
    public void ProcessRequest (HttpContext context) {
        context.Response.ContentType = "text/xml";
        context.Response.ContentEncoding = System.Text.Encoding.UTF8;
        
        // parse parameters
        if (context.Request.QueryString["did"] == null || context.Request.QueryString["date"] == null || context.Request.QueryString["st"] == null || context.Request.QueryString["ed"] == null) return;
        string deviceid = context.Request.QueryString["did"];
        DateTime date = Convert.ToDateTime(context.Request.QueryString["date"]);
        DateTime time1 = Convert.ToDateTime(context.Request.QueryString["st"]);
        DateTime time2 = Convert.ToDateTime(context.Request.QueryString["ed"]);                       
        DateTime dt1 = new DateTime(date.Year, date.Month, date.Day, time1.Hour, time1.Minute, time1.Second);
        DateTime dt2 = new DateTime(date.Year, date.Month, date.Day, time2.Hour, time2.Minute, time2.Second);
        //http://localhost:50164/OpenCapTOP/getAVLTrackingxml.ashx?date=2014-02-01&st=1:00:00&ed=4:00:00&did=4328
        int granularity = 10;
        TimeSpan difference = dt2 - dt1;

        if (difference.TotalMinutes > 300) { granularity = 10; }
        else if (difference.TotalMinutes > 100) { granularity = 5;  }
        else  { granularity = 1; }               
            
        // query database
        SqlConnection oSQLConn = new SqlConnection();

        oSQLConn.ConnectionString = LocalEnv.speedConnString;
        oSQLConn.Open();

        string sSQL = string.Format("exec AVLTrackingSample {0}, \'{1}\', \'{2}\', {3}", deviceid, dt1.ToString(), dt2.ToString(), granularity.ToString());

        SqlCommand oCmd = new SqlCommand(sSQL, oSQLConn);
        SqlDataReader oReader = oCmd.ExecuteReader();
        Console.WriteLine(sSQL);
        //create xml
        //XmlTextWriter xwriter = new XmlTextWriter(xmltext, System.Text.Encoding.UTF8);
        XmlWriterSettings settings = new XmlWriterSettings();
        settings.Indent = true;
        using (XmlWriter xwriter = XmlWriter.Create(context.Response.Output, settings))
        {
            DateTime sdt = date;
            TimeSpan tspan = new TimeSpan(0, granularity, 0);
            xwriter.WriteStartDocument();
            xwriter.WriteStartElement("stamps");
            //xwriter.WriteString(sSQL);

            if (oReader.HasRows)
            {
                oReader.Read();         
                while (sdt < dt2)
                {
                    try
                    {
                        string vehicleID = deviceid;
                        DateTime timestamp = oReader.GetDateTime(0);
                        int speed = oReader.GetInt32(4);
                        double Latitude = oReader.IsDBNull(3) ? 0.0 : oReader.GetDouble(3);
                        double Longitude = oReader.IsDBNull(2) ? 0.0 : oReader.GetDouble(2);
                        string Locname = oReader.GetString(5);
                    
                    if (sdt != timestamp)
                    {
                        xwriter.WriteStartElement("timesnap");
                        xwriter.WriteAttributeString("time", sdt.ToString("MM/dd/yy H:mm:ss"));
                        xwriter.WriteAttributeString("speed", "0");
                        xwriter.WriteAttributeString("lat", Latitude.ToString());
                        xwriter.WriteAttributeString("lng", Longitude.ToString());
                        xwriter.WriteAttributeString("locname", Locname);
                        xwriter.WriteEndElement();
                        sdt += tspan;
                    }
                    else
                    {
                        xwriter.WriteStartElement("timesnap");
                        xwriter.WriteAttributeString("time", timestamp.ToString("MM/dd/yy H:mm:ss"));
                        xwriter.WriteAttributeString("speed", speed.ToString());
                        xwriter.WriteAttributeString("lat", Latitude.ToString());
                        xwriter.WriteAttributeString("lng", Longitude.ToString());
                        xwriter.WriteAttributeString("locname", Locname);
                        xwriter.WriteEndElement();
                        sdt += tspan;
                        oReader.Read();
                    }
                    }
                    catch
                    {
                        break;
                    }
                }
            }
            xwriter.WriteEndElement();
            xwriter.WriteEndDocument();
        }

        oSQLConn.Close();
    }
 
    public bool IsReusable {
        get {
            return false;
        }
    }

}